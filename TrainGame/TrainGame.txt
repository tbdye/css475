SET FOREIGN_KEY_CHECKS = 0;
#Framework Associations
DROP TABLE IF EXISTS RollingStockTypes;
DROP TABLE IF EXISTS ProductTypes;
DROP TABLE IF EXISTS Modules;
DROP TABLE IF EXISTS Regions;
DROP TABLE IF EXISTS MainLines;
DROP TABLE IF EXISTS Junctions;
DROP TABLE IF EXISTS Yards;
DROP TABLE IF EXISTS Industries;
DROP TABLE IF EXISTS IndustryProducts;
DROP TABLE IF EXISTS IndustrySidings;
DROP TABLE IF EXISTS SidingAssignments;

#Game and Session
DROP TABLE IF EXISTS Trains;
DROP TABLE IF EXISTS RollingStockCars;
DROP TABLE IF EXISTS RollingStockAtYards;
DROP TABLE IF EXISTS RollingStockAtIndustries;
DROP TABLE IF EXISTS Shipments;
DROP TABLE IF EXISTS Waybills;
DROP TABLE IF EXISTS ConsistedCars;
DROP TABLE IF EXISTS Crews;
DROP TABLE IF EXISTS TrainCrews;
SET FOREIGN_KEY_CHECKS = 1;

#Begin Framework Associations

#RollingStockTypes
#Define a rolling stock car by name and length.
#Pre-conditions:  None.
#Assumptions:  CarLength > 0
#Used by:  ProductTypes, RollingStockCars
CREATE TABLE IF NOT EXISTS RollingStockTypes (
    CarTypeName VARCHAR(255) NOT NULL PRIMARY KEY,
    CarLength INT NOT NULL
);

#ProductTypes
#Define a product type and which rolling stock car type it is carried by.
#Pre-conditions:  A valid RollingStockTypes entity must exist.
#Assumptions:  None.
#Used by:  IndustryProducts, SidingAssignments, Shipments
CREATE TABLE IF NOT EXISTS ProductTypes (
    ProductTypeName VARCHAR(255) NOT NULL PRIMARY KEY,
    OnRollingStockType VARCHAR(255) NOT NULL,
    FOREIGN KEY (OnRollingStockType)
        REFERENCES RollingStockTypes (CarTypeName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

#Modules
#Defines properties of a physical space containing industries and railroad.  A
#module is available if it is part of a layout, but can remain defined and not
#be available.
#Pre-conditions:  None.
#Assumptions:  None.
#Used by:  Regions, MainLines, Junctions, Industries, Yards, Trains
CREATE TABLE IF NOT EXISTS Modules (
    ModuleName VARCHAR(255) NOT NULL PRIMARY KEY,
    ModuleOwner VARCHAR(255) NOT NULL,
    IsAvailable BOOL NOT NULL,
    ModuleType VARCHAR(10),
    ModuleShape VARCHAR(10),
    Description VARCHAR(255)
);

#Regions
#Defines groupings of modules and assigns a common name for the purpose of
#layout maps.
#Pre-conditions:  A valid module entity must exist.
#Assumptions:  None.
#Used by:  None. (Expected use in version 2.0)
CREATE TABLE IF NOT EXISTS Regions (
    RegionName VARCHAR(255) NOT NULL,
    Module VARCHAR(255) NOT NULL,
	PRIMARY KEY (RegionName, Module),
    FOREIGN KEY (Module)
        REFERENCES Modules (ModuleName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

#MainLines
#Defines a railroad track on a module that allows passage from at least one
#side of a module.  A main line is contiguous if it allows through traffic to
#pass over the entirety of a module.
#Pre-conditions:  A valid module entity must exist.
#Assumptions:  None.
#Used by:  Junctions, Industries, Yards
CREATE TABLE IF NOT EXISTS MainLines (
	LineName VARCHAR(255) NOT NULL,
    OnModule VARCHAR(255) NOT NULL,
    IsContiguous BOOL NOT NULL,
	PRIMARY KEY (LineName, OnModule),
    FOREIGN KEY (OnModule)
        REFERENCES Modules (ModuleName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

#Junctions
#Defines a connection point between two main lines on a module where trains may
#cross from one main line to another.  Physically, junctions are represented by
#turnouts.
#Pre-conditions:  A valid module and two main lines must exist.
#Assumptions:  FromLine <> ToLine
#Used by:  None. (Expected use in version 2.0)
CREATE TABLE IF NOT EXISTS Junctions (
    JunctionID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    OnModule VARCHAR(255) NOT NULL,
    FromLine VARCHAR(255) NOT NULL,
    ToLine VARCHAR(255) NOT NULL,
    FOREIGN KEY (OnModule)
        REFERENCES Modules (ModuleName)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (FromLine)
        REFERENCES MainLines (LineName)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ToLine)
        REFERENCES MainLines (LineName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

#Yards
#Defines a collection of tracks used to store trains and rolling stock when not
#actively being used by crew in a game session.
#Pre-conditions:  A valid module and main line must exist.
#Assumptions:  None.
#Used by:  RollingStockAtYards, Waybills
CREATE TABLE IF NOT EXISTS Yards (
    YardName VARCHAR(255) NOT NULL PRIMARY KEY,
    OnModule VARCHAR(255) NOT NULL,
    OnMainLine VARCHAR(255) NOT NULL,
    FOREIGN KEY (OnModule)
        REFERENCES Modules (ModuleName)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (OnMainLine)
        REFERENCES MainLines (LineName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

#Industries
#Defines a business, accessable by rail, producing or consuming goods, and
#transports those goods via rolling stock cars.  Industries have the ability to
#be disabled during a game session to prevent new shipping orders from being
#created.  An industry activity level is one parameter that determines the
#frequency an industry will be selected for a new shipping order.
#Pre-conditions:  A valid module and main line must exist.
#Assumptions:  ActivityLevel = {1, 2, 3} where 1 is lowest and 3 is highest.
#Used by:  IndustryProducts, IndustrySidings, SidingAssignments, Shipments, RollingStockAtIndustries
CREATE TABLE IF NOT EXISTS Industries (
    IndustryName VARCHAR(255) NOT NULL PRIMARY KEY,
    OnModule VARCHAR(255) NOT NULL,
    OnMainLine VARCHAR(255) NOT NULL,
    IsAvailable BOOL NOT NULL,
    ActivityLevel INT NOT NULL,
    FOREIGN KEY (OnModule)
        REFERENCES Modules (ModuleName)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (OnMainLine)
        REFERENCES MainLines (LineName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS IndustryProducts (
    ForIndustry VARCHAR(255) NOT NULL,
    UsingProductType VARCHAR(255) NOT NULL,
    IsProducer BOOL NOT NULL,
    PRIMARY KEY (ForIndustry, UsingProductType),
	FOREIGN KEY (ForIndustry)
        REFERENCES Industries (IndustryName)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (UsingProductType)
        REFERENCES ProductTypes (ProductTypeName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS IndustrySidings (
    ForIndustry VARCHAR(255) NOT NULL,
    SidingNumber INT NOT NULL,
    SidingLength INT NOT NULL,
    AvailableLength INT NOT NULL,
	PRIMARY KEY (ForIndustry, SidingNumber),
    FOREIGN KEY (ForIndustry)
        REFERENCES Industries (IndustryName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS SidingAssignments (
    ForIndustry VARCHAR(255) NOT NULL,
    SidingNumber INT NOT NULL,
    ForProductType VARCHAR(255) NOT NULL,
    PRIMARY KEY (ForIndustry , SidingNumber, ForProductType),
    FOREIGN KEY (ForIndustry)
        REFERENCES Industries (IndustryName)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ForIndustry, SidingNumber)
        REFERENCES IndustrySidings (ForIndustry, SidingNumber)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ForProductType)
        REFERENCES ProductTypes (ProductTypeName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

#Begin Game and Session
CREATE TABLE IF NOT EXISTS Trains (
    TrainNumber INT NOT NULL PRIMARY KEY,
    LeadPower VARCHAR(255),
    DCCAddress CHAR(4),
    OnModule VARCHAR(255) NOT NULL,
    TimeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    TimeUpdated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (OnModule)
        REFERENCES Modules (ModuleName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS RollingStockCars (
    CarID VARCHAR(255) NOT NULL PRIMARY KEY,
    CarType VARCHAR(255) NOT NULL,
    Description VARCHAR(255),
    FOREIGN KEY (CarType)
        REFERENCES RollingStockTypes (CarTypeName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS RollingStockAtYards (
    CarID VARCHAR(255) NOT NULL PRIMARY KEY,
    AtYard VARCHAR(255) NOT NULL,
    TimeArrived TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CarID)
        REFERENCES RollingStockCars (CarID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (AtYard)
        REFERENCES Yards (YardName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS RollingStockAtIndustries (
    CarID VARCHAR(255) NOT NULL PRIMARY KEY,
    AtIndustry VARCHAR(255) NOT NULL,
    TimeArrived TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CarID)
        REFERENCES RollingStockCars (CarID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (AtIndustry)
        REFERENCES Industries (IndustryName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Shipments (
    ShipmentID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ProductType VARCHAR(255) NOT NULL,
	FromIndustry VARCHAR(255) NOT NULL,
	FromSiding INT NOT NULL,
    ToIndustry VARCHAR(255) NOT NULL,
	ToSiding INT NOT NULL,
    TimeCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    TimePickedUp TIMESTAMP,
    TimeDelivered TIMESTAMP,
    FOREIGN KEY (ProductType)
		REFERENCES ProductTypes (ProductTypeName)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (FromIndustry)
        REFERENCES Industries (IndustryName)
        ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (FromIndustry, FromSiding)
		REFERENCES IndustrySidings (ForIndustry, SidingNumber)
		ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ToIndustry)
        REFERENCES Industries (IndustryName)
        ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (ToIndustry, ToSiding)
		REFERENCES IndustrySidings (ForIndustry, SidingNumber)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Waybills (
    OnCar VARCHAR(255) NOT NULL UNIQUE,
    UsingShipmentID INT NOT NULL,
    ReturnToYard VARCHAR(255) NOT NULL,
	PRIMARY KEY (OnCar, UsingShipmentID),
    FOREIGN KEY (OnCar)
        REFERENCES RollingStockCars (CarID)
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (UsingShipmentID)
        REFERENCES Shipments (ShipmentID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ReturnToYard)
        REFERENCES Yards (YardName)
        ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS ConsistedCars (
    OnTrain INT NOT NULL,
    UsingCar VARCHAR(255) NOT NULL UNIQUE,
    TimeAdded TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (OnTrain, UsingCar),
	FOREIGN KEY (OnTrain)
        REFERENCES Trains (TrainNumber)
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (UsingCar)
        REFERENCES RollingStockCars (CarID)
        ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS Crews (
    CrewName VARCHAR(255) NOT NULL PRIMARY KEY,
    Description VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS TrainCrews (
    OnTrain INT NOT NULL PRIMARY KEY,
    WithCrew VARCHAR(255) NOT NULL UNIQUE,
    TimeJoined TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (OnTrain)
        REFERENCES Trains (TrainNumber)
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (WithCrew)
        REFERENCES Crews (CrewName)
        ON DELETE NO ACTION ON UPDATE NO ACTION
);