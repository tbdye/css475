Freight Train Simulator Game – Use Case List: Version 1.0

Milestone 1:  Layout, Modules, Industries, and Physical Mappings
-------------------------------------------------------------------------------
Note:  These settings cannot be modified if there are active game sessions.

Create New Layout:  [Basic]

The user supplies layout name, layout owner/club/organization name, and an
optional layout description to host a game session.

The system creates a new layout record.

****

Remove Layout:  [Performance]

The user selects a layout.

The system removes all records for that layout.

****

Create New Module:  [Basic]

The user creates a new module and supplies a module name, module owner, and
provides optional module type, optional module shape, and optional module
description.

The system creates a new module record.

****

Remove Module:  [Performance]

The user selects a module.

The system removes the module, if unused.

****

Modify Module:  [Delighter]

The user selects a module and edits contents.

The system updates the module record.

****

Create Main Line:  [Basic]

The user selects a module name and declares a contiguous main line.

The system creates a new main line record associated with a module.

Note:  Main lines are contiguous if they span the entire module.

****

Remove Main Line:  [Performance]

The user selects a module name and a main line.

The system removes the main line, if unused.

****

Create Junction:  [Delighter]

The user selects a module name and declares a junction between two main lines.

The system creates a new junction record associated with two main lines on a
module.

Note:  Main line junctions are formed where two main lines converge or diverge.

****

Remove Junction:  [Delighter]

The user selects a module name and a junction.

The system removes the junction.

****

Create New Industry:  [Basic]

The user creates a new industry and supplies a parent module ID, industry name,
main line, activity level, a track siding number, and track siding length.

The system creates a new industry record and assigns it to a module record.

****

Remove Industry:  [Performance]

The user selects an industry.

The system removes the industry.

****

Modify Industry:  [Delighter]

The user selects an industry and edits contents.

The system updates the industry record.

****

Create New Yard:  [Basic]

The user creates a new yard and supplied a parent module ID, yard name, and
main line.

The system creates a new yard record and assigns it to a module record.

****

Remove Yard:  [Performance]

The user selects a yard.

The system removes the yard.

****

Modify Yard:  [Delighter]

The user selects a yard and edits contents.

The system updates the yard record.

****

Create Region:  [Version 2.0]

The user creates a new region and supplies a region name and optional
description.

The system creates a new region record.

****

Remove Region:  [Version 2.0]

****

Modify Region:  [Version 2.0]

****

Add Module to Region:  [Version 2.0]

****

Remove Module from Region:  [Version 2.0]

****

Edit Module Map:  [Version 2.0]

Note:  A module mapping order must be contiguous in a region (group of
associated modules) and allows for module insertions and removals.

****

Milestone 2:  Logical Mappings
-------------------------------------------------------------------------------
Note:  These settings cannot be modified if there are active game sessions.

Create New Rolling Stock Type:  [Basic]

The user creates a new rolling stock type supplying a rolling stock type name
and rolling stock length.

The system creates a new rolling stock type record.

****

Remove Rolling Stock Type:  [Performance]

The user selects a rolling stock type.

The system removes the rolling stock type, if unused.

****

Create New Product Type:  [Basic]

The user creates a new product type, supplies the product name, and assigns a
rolling stock type for transport.

The system creates a new product type record and assigns it to a rolling stock
type.

****

Remove Product Type:  [Performance]

The user selects a product type.

The system removes the product type, if unused.  The rolling stock type is
unaffected if removed.

****

Create New Industry Product Association:  [Basic]

The user selects an industry and selects a product type that they ship,
declaring if it is something produced or consumed.

The system records the association between the industry and the product type,
denoting if it produced (load point) or consumed (unload point).

****

Remove Industry Product Association:  [Performance]

The user selects an industry and product type to remove.

The system removes the association.  Product types are unaffected.

****

Milestone 3:  Game Session and Logic
-------------------------------------------------------------------------------

Start Game Session:  [Basic]

The user requests to open a new game session and specifies a maximum train
length (in rolling stock cars).

The system records that a game is currently in progress and sets the applicable
rule.

****

End Game Session:  [Performance]

The user requests to end the game session.

The system un-assigns and removes all active crews, trains, and rolling stock
in service.

****

Create Shipment:  [Basic]

The user supplies a request for service at an industry to load products on
rolling stock and deliver them to another industry.

The system creates a record for the shipment request and records the time.

Note:  This can call the Generate Waybill use case in version 2.0.

****

Cancel Shipment:  [Performance]

The user selects a shipping ID.

The system deletes the shipping record, if no activity has taken place, and it
has not been assigned to rolling stock.

****

Update Shipment:  [Basic]

The user selects a shipping ID and supplies a status update for initial pickup
or delivery.

The system updates the shipping record and records the time.

****

Create Waybill:  [Version 2.0]

The user indicates origination location.

The system triggers a check on the game state to identify industries that have
products that can be carried by that rolling stock car type that need to be
serviced.  A product is selected and load, unload, and reclassification (return
empty to yard) instructions are returned back to the user.

Note:  A full industry occupancy at the time of check will disqualify a
particular industry as a load point.

Note:  A reported activity level will cause an industry to be chosen as a
destination more often unless industry occupancy is reported to be full.

Note:  Load and unload destinations should be in different regions with a
specified minimum module separation unless not possible due to layout
configuration.  Unload regions should be applied sequentially when more than
two regions exist.

Note:  Product types that do not have applicable producers and consumers in the
layout should load or unload “off layout” and be delivered to yards for
transfer.

****

Milestone 4:  Rolling Stock, Trains, and Crew
-------------------------------------------------------------------------------
Note:  An active game session must exist for these functions.

Create New Rolling Stock:  [Basic]

The user selects a physical rolling stock car for use and supplies a car ID,
identifies car type, provides an optional description, and specifies a location
(industry or yard) origination.

The system creates an active car’s record.

****

Remove Rolling Stock:  [Performance]

The user selects a rolling stock car by ID.

The system deletes the car record if not assigned to a train and no active
shipping waybill.

****

Modify Rolling Stock:  [Performance]

The user selects a rolling stock car ID and supplies changes.

The system modifies the car’s record.

****

Add Waybill to Rolling Stock:  [Basic]

The user selects a rolling stock car ID and requests assignment of shipping
orders.

The system updates the rolling stock car’s record to associate a shipping order
to specify car loading and unloading destinations, then assigns a
reclassification (return empty to yard) destination.

Note:  This triggers the Create Shipment use case in version 2.0.

****

Remove Waybill from Rolling Stock:  [Performance]

The user selects a rolling stock car ID to cancel this shipment.

The system removes the shipping assignments from the rolling stock car if the
shipping order indicates loading has not taken place or the shipping order is
completed.

****

Transfer Waybill to Rolling Stock:  [Delighter]

The user selects a rolling stock car ID to transfer a waybill from, and a
rolling stock car ID to transfer the waybill to.

The system calls the Add Waybill to Rolling Stock use case (without triggering
a new shipment) on the new car ID, then removes the shipping assignments from
the old car ID.

****

Create New Crew:  [Basic]

The user creates a new player supplying a crew name.

The system creates a new crew record.

****

Remove Crew:  [Performance]

The user selects a crew to remove.

The system removes the crew if not currently assigned to a train.

****

Create New Train:  [Basic]

The user indicates that a new train is to be created, supplies a locomotive
number, DCC address, and location (module) origination.

The system records that a new train exists, the identifying information,
location, and generates a train number.

Note:  Train numbers can be generated sequentially.

Note:  The train is unassigned to a crew and contains no rolling stock.

****

Remove Train:  [Performance]

The user selects a train and indicates that a train is no longer needed.

The system deletes the active train record and removes rolling stock from that
train, if any exist.

Note:  Existing trains signify that there is an active game session.

****

Modify Train:  [Performance]

The user selects a train and updates information.

The system updates the train record.

****

Add Rolling Stock to Train:  [Basic]

The user selects a train and chooses physically available rolling stock to add
to the train.  For each car, the user supplies the rolling stock car ID.

The system associates the rolling stock car ID to the train and records the
time.  For each car, that car is consisted to a train.  Location is specified
to be in the train’s consist.

****

Remove Rolling Stock from Train:  [Basic]

The user selects a train and a rolling stock car ID to remove.

The system removes that rolling stock car from that train and records the time.
Location is specified to be at a yard or industry.

****

Create Delivery Request:  [Version 2.0]

Note:  Assign a train to pick up rolling stock at a specific industry.

****

Generate Waybills:  [Version 2.0]

The user supplies a module ID with a yard containing rolling stock without
active waybills.

The system generates waybills for each rolling stock car identified.

Note:  Call the Create Waybill use case.

Note:  Preference of loading locations is by region, by main line, determined
by industry activity level, where possible.

Note:  Multiple cars should go to the same industry if their activity level is
high and they’re not full, but limit to 50% capacity.

****

Generate Consist:  [Version 2.0]

The user supplies an origination location and indicates that a new train
consist is to be automatically generated.

The system creates a new train with the Add New Train use case.  For each
available rolling stock in that module’s yard or local industries that rolling
stock car is consisted to that train (until maximum train length is reached).

Note:  Highest priority for rolling stock on a module goes to cars with
waybills delivering to the same region along the same main line.

Note:  Delivery requests can be added for industries if industry occupancy is
full and there is no other scheduled industry interaction.

****

Add Crew to Train:  [Basic]

The user selects an existing train to crew.

The system assigns that train to that crew and records the time.

****

Remove Crew from Train:  [Performance]

The user selects a crew and a train.

The system removes the association of that crew from that train and records the
time.

****

Milestone 5:  Gameplay
-------------------------------------------------------------------------------

Deliver Rolling Stock:  [Basic]

The user reports that his or her train is servicing an industry and indicates
that a rolling stock car has been dropped off.

The system calls the Check-In at Module use case, then the Remove Rolling Stock
from Train use case.  The industry occupancy is updated to show that a rolling
stock car of the type’s length is occupying space  on an industry siding and
that space is no longer available until the car is removed.

****

Receive Rolling Stock:  [Basic]

The user reports that his or her train is servicing an industry and indicates
that a rolling stock car has been picked up.

The system calls the Check-In at Module use case, then the Add Rolling Stock to
Train use case.  The industry occupancy is updated to show that a rolling stock
car of the type’s length has been removed from the industry siding and that
length is now available.

****

Check-In at Module:  [Basic]

The user reports that his or her train has arrived or is doing work at a
module.

The system records the crew’s current location and records the time.

****

Display List of Modules:  [Basic]

The user requests to see modules in the layout.

The system displays modules that have been added.

****

Display Module:  [Basic]

The user requests to see detailed information about a module.

The system displays module information, including main lines, junctions, and
industries on that module.

****

Display Industry:  [Performance]

The user requests to see detailed information about an industry.

The system displays industry information, including all product types produced
and consumed, and current occupancy.

****

Display User Train:  [Basic]

The user selects a train.

The system displays the crew, locomotive, DCC number, and for each rolling
stock car: car ID, car type, loaded product if exists, and car next
destination.

****

Display Active Trains:  [Performance]

The user requests to view all active trains in an open game session.

The system reports the train number, locomotive number, DCC number, crew name,
last reported location, and time since last report for each train.

****

Display Rolling Stock Car:  [Performance]

The user selects a train and rolling stock car ID.

The system displays the car’s ID, car type, description, waybill, and steps
complete in the waybill lifecycle.

****

Display Rolling Stock at Location:  [Version 2.0]

Note:  Shows rolling stock on modules and waybills.

****

Display Map:  [Version 2.0]

The user supplies a region and requests to see a breakdown of industries by
main line.

The system displays a module list, ordered by physical connection.

****

Display Crew History:  [Delighter]

The user requests to view work performed by a crew during an open game session.

The system reports a crew assignments by train number.  For each train, all
rolling stock assignments, module check-ins, and industry movements, and
associated timestamps are displayed.

****

Display Industry Shipping Orders:  [Delighter]

The user supplies an industry ID.

The system reports all previous (closed) and current shipping orders for that
industry.  Open shipping orders display rolling stock scheduled to load or
deliver products to that industry.

****