/*-----------------------------------------------------------------------------
CSS 475 Inclass Assignment 2
By:  Brett Holman, T. Vance Roley, Thomas Dye, Zakk Roberts
Instructor:  Dr. Erika Parsons

Hotel Database
-----------------------------------------------------------------------------*/

DROP TABLE Booking;
DROP TABLE Guest;
DROP TABLE Room;
DROP TABLE Hotel;

/*Create tables here*/

CREATE TABLE Hotel (
    hotelNo INT NOT NULL UNIQUE,
    hotelName VARCHAR(15) NOT NULL,
    hotelCity VARCHAR(15) NOT NULL,
    PRIMARY KEY (hotelNo)
);

CREATE TABLE Room (
    roomNo INT NOT NULL CHECK (value BETWEEN 1 AND 9999),
    H_hotelNo INT NOT NULL CHECK (value IN (SELECT 
            hotelNo
        FROM
            Hotel)),
    roomType VARCHAR(8) NOT NULL CHECK (roomType IN ('single' , 'double', 'suite')),
    roomPrice DECIMAL(5 , 2 ) NOT NULL CHECK (value BETWEEN 50 AND 500),
    PRIMARY KEY (roomNo , H_hotelNo),
	FOREIGN KEY (H_hotelNo)
		REFERENCES Hotel(hotelNo)
		ON DELETE CASCADE ON UPDATE CASCADE
);
	
CREATE TABLE Guest (
    guestNo INT NOT NULL UNIQUE CHECK (value > 0),
    guestName VARCHAR(60) NOT NULL,
    guestAddress VARCHAR(60),
    PRIMARY KEY (guestNo)
);

CREATE TABLE Booking (
    H_hotelNo INT NOT NULL CHECK (value IN (SELECT 
            hotelNo
        FROM
            Hotel)),
    G_guestNo INT NOT NULL CHECK (value IN (SELECT 
            guestNo
        FROM
            Guest)),
    dateFrom DATE NOT NULL,
    dateTo DATE NOT NULL CHECK (value >= dateFrom),
    R_roomNo INT NOT NULL,
    PRIMARY KEY (H_hotelNo , dateFrom , R_roomNo),
    FOREIGN KEY (H_hotelNo)
        REFERENCES Hotel (hotelNo)
        ON DELETE NO ACTION ON UPDATE CASCADE,
    FOREIGN KEY (G_guestNo)
        REFERENCES Guest (guestNo)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (R_roomNo)
        REFERENCES Room (roomNo)
        ON DELETE NO ACTION ON UPDATE CASCADE
);

DELIMITER $$
CREATE TRIGGER PreventDoubleBooking BEFORE INSERT ON Booking 
FOR EACH ROW
BEGIN
	IF EXISTS (SELECT 1 FROM Booking WHERE
		H_hotelNo = NEW.H_hotelNo AND
		R_roomNo = NEW.R_roomNo AND
		dateFrom <= NEW.dateTo AND
		dateTo >= NEW.dateFrom) THEN BEGIN
			END;
	END IF;
END$$
DELIMITER ;

/*Default data inserted here*/

INSERT INTO Hotel VALUES (001, 'Hilton', 'Seattle');
INSERT INTO Hotel VALUES (002, 'Marriot', 'Honolulu');
INSERT INTO Hotel VALUES (003, 'Best Western', 'Los Angeles');
INSERT INTO Hotel VALUES (004, 'Super 8', 'Portland');
INSERT INTO Hotel VALUES (005, 'Marriot', 'Seattle');
INSERT INTO Hotel VALUES (006, 'Best Western', 'Seattle');

INSERT INTO Room VALUES (100, 001, 'Suite', 300);
INSERT INTO Room VALUES (200, 001, 'Double', 250);
INSERT INTO Room VALUES (300, 001, 'Single', 200);
INSERT INTO Room VALUES (100, 002, 'Double', 200);
INSERT INTO Room VALUES (200, 002, 'Single', 150);
INSERT INTO Room VALUES (100, 003, 'Double', 120);
INSERT INTO Room VALUES (200, 003, 'Single', 100);
INSERT INTO Room VALUES (100, 004, 'Single', 80);

INSERT INTO Guest VALUES (001, 'Clark Olson', NULL);
INSERT INTO Guest VALUES (002, 'Julie Tahajian', 'Pasadina, California');
INSERT INTO Guest VALUES (003, 'Farha Banerjee', 'Dallas, Texas');
INSERT INTO Guest VALUES (004, 'Ichiro Suzuki', 'New York, New York');
INSERT INTO Guest VALUES (005, 'T. Vance Roley', 'Seattle, Washington');
INSERT INTO Guest VALUES (006, 'Brett Holman', 'Seattle, Washington');
INSERT INTO Guest VALUES (007, 'Zakk Roberts', 'Seattle, Washington');
INSERT INTO Guest VALUES (008, 'Thomas Dye', 'Seattle, Washington');

INSERT INTO Booking VALUES (001, 004, '2003-08-10', '2003-08-12', 100);
INSERT INTO Booking VALUES (004, 001, '2003-11-02', '2003-11-24', 100);
INSERT INTO Booking VALUES (003, 002, '2004-05-12', '2004-05-16', 200);
INSERT INTO Booking VALUES (002, 003, '2004-09-29', '2004-10-13', 200);
INSERT INTO Booking VALUES (001, 004, '2005-12-23', '2005-12-29', 100);
INSERT INTO Booking VALUES (002, 001, '2005-12-31', '2006-01-02', 300);
INSERT INTO Booking VALUES (003, 007, '2008-03-02', '2008-03-05', 100);
INSERT INTO Booking VALUES (003, 005, '2009-03-02', '2009-03-05', 100);
INSERT INTO Booking VALUES (003, 005, '2009-03-27', '2009-03-28', 200);
INSERT INTO Booking VALUES (003, 006, '2009-03-27', '2009-03-28', 100);

/*Add insertions for testing constraints here*/



/*Add selections here*/

#1
SELECT 
    *
FROM
    Hotel;

#2
SELECT 
    *
FROM
    Guest
WHERE
    guestAddress LIKE '%Seattle%';

#3
SELECT 
    *
FROM
    Guest
WHERE
    guestAddress LIKE '%Seattle%'
ORDER BY guestName ASC;

#4
SELECT 
    COUNT(*)
FROM
    Hotel;
	
#5
SELECT 
    COUNT(*)
FROM
    Booking
WHERE
    (MONTH(dateFrom) = 03
        OR MONTH(dateTo) = 03)
        AND YEAR(dateFrom) = 2009
        OR YEAR(dateTo) = 2009;
		
#6
SELECT 
    hotelCity, COUNT(*)
FROM
    Hotel
GROUP BY hotelCity;

#7
